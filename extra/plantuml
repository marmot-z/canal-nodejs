@startuml

interface CanalConnector {
    + void connect()
    + void disconnect()
    + void subscribe()
    + void subscribe(filter)
    + boolean checkValid()
    + void unsubscribe()
    + Message get(batchSize)
    + Message get(batchSize, timeout, timeunit)
    + void ack(batchId)
    + Message getWithoutAck(batchSize)
    + Message getWithoutAck(batchSize, timeout, timeunit)
    + void rollback()
    + void rollback(batchId)
}

interface MQCanalConnector extends CanalConnector {
    + List<Message> getList(timeout, unit)
    + List<Message> getListWithoutAck(timeout, unit)
    + List<FlatMessage> getFlatList(timeout, unit)
    + List<FlatMessage> getFlatListWithoutAck(timeout, unit)
    + void ack()
    + void rollback()
}

interface CanalNodeAccessStrategy {
    Address currentNode()
    Address nextNode()
}

class SimpleCanalConnector implements CanalConnector
class ClusterCanalConnector implements CanalConnector
class KafkaCanalConnector implements MQCanalConnector
class RabbitMQCanalConnector implements MQCanalConnector
class RocketMQCanalConnector implements MQCanalConnector
class PulsarMQCanalConnector implements MQCanalConnector

class SimpleNodeAccessStrategy implements CanalNodeAccessStrategy
class ClusterNodeAccessStrategy implements CanalNodeAccessStrategy

CanalConnector ..> CanalNodeAccessStrategy

CanalConnectors - CanalConnector : create >
CanalMessageDeserializer - Message : deserializer >
CanalConnector - Message : fetch >

note top of CanalConnector : Canal客户端，用于连接Canale服务端、获取MySQL增量数据
note left of CanalNodeAccessStrategy : Canal服务端节点访问策略，用于failover切换至正常的节点

@enduml